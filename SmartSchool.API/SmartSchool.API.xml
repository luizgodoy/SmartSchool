<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SmartSchool.API</name>
    </assembly>
    <members>
        <member name="T:SmartSchool.API.Controllers.AlunoController">
            <summary>
            Controller de Aluno
            </summary>
        </member>
        <member name="M:SmartSchool.API.Controllers.AlunoController.#ctor(SmartSchool.API.Data.IRepository,AutoMapper.IMapper)">
            <summary>
            Construtor principal
            </summary>
            <param name="repos"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:SmartSchool.API.Controllers.AlunoController.Get">
            <summary>
            Recupera todos os alunos
            </summary>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.API.Controllers.AlunoController.GetById(System.Int32)">
            <summary>
            Recupera um aluno específico por ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.API.Controllers.AlunoController.GetByDisciplinaId(System.Int32)">
            <summary>
            Recupera todos os alunos de um disciplina ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.API.Controllers.AlunoController.GetByName(System.String,System.String)">
            <summary>
            Recupera um aluno por nome, exatamente igual a string informada
            </summary>
            <param name="nome"></param>
            <param name="sobrenome"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.API.Controllers.AlunoController.Post(SmartSchool.API.Dtos.AlunoDto)">
            <summary>
            Adiciona um novo aluno
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.API.Controllers.AlunoController.Put(System.Int32,SmartSchool.API.Dtos.AlunoDto)">
            <summary>
            Atualiza o registro de aluno
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.API.Controllers.AlunoController.Patch(System.Int32,SmartSchool.API.Dtos.AlunoDto)">
            <summary>
            Atualiza uma informação de aluno
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.API.Controllers.AlunoController.Delete(System.Int32)">
            <summary>
            Exclui um aluno da base de dados
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:SmartSchool.API.Controllers.ProfessorController">
            <summary>
            Controller de professor
            </summary>
        </member>
        <member name="M:SmartSchool.API.Controllers.ProfessorController.#ctor(SmartSchool.API.Data.IRepository)">
            <summary>
            Contrutor da controller de professor
            </summary>
            <param name="repos"></param>
        </member>
        <member name="M:SmartSchool.API.Controllers.ProfessorController.Get">
            <summary>
            Recupera todos os professores cadastrados
            </summary>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.API.Controllers.ProfessorController.GetById(System.Int32)">
            <summary>
            Recupera o professor pelo ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.API.Controllers.ProfessorController.GetByDisciplinaId(System.Int32)">
            <summary>
            Recupera o professor pela Disciplina
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.API.Controllers.ProfessorController.GetByName(System.String)">
            <summary>
            Recupera o professor pelo nome
            </summary>
            <param name="nome"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.API.Controllers.ProfessorController.Post(SmartSchool.API.Models.Professor)">
            <summary>
            Adiciona um novo professor a base de dados
            </summary>
            <param name="professor"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.API.Controllers.ProfessorController.Put(System.Int32,SmartSchool.API.Models.Professor)">
            <summary>
            Atualiza o registro de professor
            </summary>
            <param name="id"></param>
            <param name="professor"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.API.Controllers.ProfessorController.Patch(System.Int32,SmartSchool.API.Models.Professor)">
            <summary>
            Atualizar o registro de professor
            </summary>
            <param name="id"></param>
            <param name="professor"></param>
            <returns></returns>
        </member>
        <member name="M:SmartSchool.API.Controllers.ProfessorController.Delete(System.Int32)">
            <summary>
            Excluir o registro de professor da base de dados
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:SmartSchool.API.Startup">
            <summary>
            StartUp Class
            </summary>
        </member>
        <member name="M:SmartSchool.API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Construtor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:SmartSchool.API.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:SmartSchool.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SmartSchool.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline. 
            </summary>
            <param name="app">IApplicationBuilder</param>
            <param name="env">IWebHostEnvironment</param>
        </member>
    </members>
</doc>
